// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/bunsanorg/broker/go/bunsan/broker/worker (interfaces: Worker)

package mock

import (
	service "github.com/bunsanorg/broker/go/bunsan/broker/service"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Worker interface
type MockWorker struct {
	ctrl     *gomock.Controller
	recorder *_MockWorkerRecorder
}

// Recorder for MockWorker (not exported)
type _MockWorkerRecorder struct {
	mock *MockWorker
}

func NewMockWorker(ctrl *gomock.Controller) *MockWorker {
	mock := &MockWorker{ctrl: ctrl}
	mock.recorder = &_MockWorkerRecorder{mock}
	return mock
}

func (_m *MockWorker) EXPECT() *_MockWorkerRecorder {
	return _m.recorder
}

func (_m *MockWorker) Abort() error {
	ret := _m.ctrl.Call(_m, "Abort")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWorkerRecorder) Abort() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Abort")
}

func (_m *MockWorker) Do(_param0 service.Request) error {
	ret := _m.ctrl.Call(_m, "Do", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockWorkerRecorder) Do(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Do", arg0)
}

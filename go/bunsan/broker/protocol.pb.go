// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bunsan/broker/protocol.proto

package broker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Result_Status int32

const (
	Result_OK    Result_Status = 0
	Result_ERROR Result_Status = 1
	// proto errors
	Result_PROTO_ERROR Result_Status = 100
	// worker errors
	Result_WORKER_ERROR         Result_Status = 200
	Result_UNKNOWN_WORKER       Result_Status = 201
	Result_INCOMPATIBLE_PACKAGE Result_Status = 202
	// package errors
	Result_PACKAGE_ERROR       Result_Status = 300
	Result_PACKAGE_NOT_FOUND   Result_Status = 301
	Result_PACKAGE_BUILD_ERROR Result_Status = 302
	// execution errors
	Result_EXECUTION_ERROR   Result_Status = 400
	Result_EXECUTION_TIMEOUT Result_Status = 401
)

var Result_Status_name = map[int32]string{
	0:   "OK",
	1:   "ERROR",
	100: "PROTO_ERROR",
	200: "WORKER_ERROR",
	201: "UNKNOWN_WORKER",
	202: "INCOMPATIBLE_PACKAGE",
	300: "PACKAGE_ERROR",
	301: "PACKAGE_NOT_FOUND",
	302: "PACKAGE_BUILD_ERROR",
	400: "EXECUTION_ERROR",
	401: "EXECUTION_TIMEOUT",
}
var Result_Status_value = map[string]int32{
	"OK":                   0,
	"ERROR":                1,
	"PROTO_ERROR":          100,
	"WORKER_ERROR":         200,
	"UNKNOWN_WORKER":       201,
	"INCOMPATIBLE_PACKAGE": 202,
	"PACKAGE_ERROR":        300,
	"PACKAGE_NOT_FOUND":    301,
	"PACKAGE_BUILD_ERROR":  302,
	"EXECUTION_ERROR":      400,
	"EXECUTION_TIMEOUT":    401,
}

func (x Result_Status) String() string {
	return proto.EnumName(Result_Status_name, int32(x))
}
func (Result_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

type Task struct {
	// required
	Worker string `protobuf:"bytes,1,opt,name=worker" json:"worker,omitempty"`
	// required
	Package string `protobuf:"bytes,2,opt,name=package" json:"package,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Task) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

func (m *Task) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *Task) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Status struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Status) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Status) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Status) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Result struct {
	Status Result_Status `protobuf:"varint,1,opt,name=status,enum=bunsan.broker.Result_Status" json:"status,omitempty"`
	Reason string        `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	Data   []byte        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Log    []byte        `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Result) GetStatus() Result_Status {
	if m != nil {
		return m.Status
	}
	return Result_OK
}

func (m *Result) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Result) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Result) GetLog() []byte {
	if m != nil {
		return m.Log
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "bunsan.broker.Task")
	proto.RegisterType((*Status)(nil), "bunsan.broker.Status")
	proto.RegisterType((*Result)(nil), "bunsan.broker.Result")
	proto.RegisterEnum("bunsan.broker.Result_Status", Result_Status_name, Result_Status_value)
}

func init() { proto.RegisterFile("bunsan/broker/protocol.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4d, 0x6e, 0xda, 0x40,
	0x14, 0xc7, 0x3b, 0x36, 0xb8, 0xe5, 0x95, 0x0f, 0xf3, 0x40, 0xc8, 0x95, 0x58, 0x20, 0x56, 0xac,
	0x8c, 0xd4, 0xf6, 0x02, 0x7c, 0xb8, 0xad, 0x65, 0xf0, 0xa0, 0xa9, 0x2d, 0xaa, 0x6e, 0xac, 0x01,
	0x2c, 0x16, 0x46, 0x0c, 0xb2, 0x8d, 0x7a, 0x8d, 0xf6, 0x1e, 0x4d, 0xce, 0x91, 0xe4, 0x18, 0xc9,
	0x45, 0x22, 0x8f, 0x87, 0x44, 0x91, 0xb2, 0xc9, 0xee, 0xff, 0xf1, 0xfc, 0x7b, 0x7a, 0xd6, 0x40,
	0x7f, 0x73, 0x3e, 0x66, 0xfc, 0x38, 0xde, 0xa4, 0x22, 0x89, 0xd3, 0xf1, 0x29, 0x15, 0xb9, 0xd8,
	0x8a, 0x83, 0x2d, 0x05, 0x36, 0xca, 0xd6, 0x2e, 0xdb, 0xe1, 0x02, 0x2a, 0x01, 0xcf, 0x12, 0xec,
	0x81, 0xf1, 0x47, 0xa4, 0x49, 0x9c, 0x5a, 0x64, 0x40, 0x46, 0x35, 0xa6, 0x1c, 0x5a, 0xf0, 0xfe,
	0xc4, 0xb7, 0x09, 0xdf, 0xc7, 0x96, 0x26, 0x8b, 0x8b, 0x45, 0x84, 0xca, 0x8e, 0xe7, 0xdc, 0xd2,
	0x07, 0x64, 0x54, 0x67, 0x52, 0x0f, 0x7f, 0x80, 0xf1, 0x33, 0xe7, 0xf9, 0x39, 0x2b, 0xda, 0xad,
	0xd8, 0xc5, 0x92, 0x56, 0x65, 0x52, 0x17, 0x3b, 0xd2, 0x98, 0x67, 0xe2, 0xa8, 0x50, 0xca, 0xbd,
	0x4a, 0xba, 0xd7, 0xc0, 0x60, 0x71, 0x76, 0x3e, 0xe4, 0xf8, 0x15, 0x8c, 0x4c, 0x42, 0x25, 0xac,
	0xf9, 0xb9, 0x6f, 0xbf, 0x38, 0xc1, 0x2e, 0xc7, 0xec, 0x72, 0x31, 0x53, 0xb3, 0x6f, 0x59, 0x86,
	0x26, 0xe8, 0x07, 0xb1, 0xb7, 0x2a, 0x32, 0x2a, 0xe4, 0xf0, 0x81, 0x3c, 0x5d, 0x62, 0x80, 0x46,
	0x3d, 0xf3, 0x1d, 0xd6, 0xa0, 0xea, 0x30, 0x46, 0x99, 0x49, 0xb0, 0x05, 0x1f, 0x57, 0x8c, 0x06,
	0x34, 0x2a, 0x83, 0x1d, 0xb6, 0xa1, 0xbe, 0xa6, 0xcc, 0x73, 0x98, 0x4a, 0x6e, 0x08, 0x76, 0xa0,
	0x19, 0xfa, 0x9e, 0x4f, 0xd7, 0x7e, 0x54, 0x56, 0xe6, 0x2d, 0xc1, 0x4f, 0xd0, 0x75, 0xfd, 0x19,
	0x5d, 0xae, 0x26, 0x81, 0x3b, 0x5d, 0x38, 0xd1, 0x6a, 0x32, 0xf3, 0x26, 0xdf, 0x1d, 0xf3, 0x8e,
	0x20, 0x42, 0x43, 0x39, 0xc5, 0xf8, 0xaf, 0x61, 0x0f, 0xda, 0x97, 0xcc, 0xa7, 0x41, 0xf4, 0x8d,
	0x86, 0xfe, 0xdc, 0xbc, 0xd2, 0xd0, 0x82, 0xce, 0x25, 0x9f, 0x86, 0xee, 0x62, 0xae, 0xbe, 0xb8,
	0xd6, 0xb0, 0x0b, 0x2d, 0xe7, 0x97, 0x33, 0x0b, 0x03, 0x97, 0xfa, 0x2a, 0xfd, 0xab, 0x17, 0x9c,
	0xe7, 0x34, 0x70, 0x97, 0x0e, 0x0d, 0x03, 0xf3, 0x9f, 0x3e, 0xfd, 0xf0, 0xdb, 0x28, 0xff, 0xe1,
	0xc6, 0x90, 0x8f, 0xe3, 0xcb, 0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xd5, 0x51, 0x75, 0x3c,
	0x02, 0x00, 0x00,
}

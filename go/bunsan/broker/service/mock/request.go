// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/bunsanorg/broker/go/bunsan/broker/service (interfaces: Request)

package mock_service

import (
	broker "github.com/bunsanorg/broker/go/bunsan/broker"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Request interface
type MockRequest struct {
	ctrl     *gomock.Controller
	recorder *_MockRequestRecorder
}

// Recorder for MockRequest (not exported)
type _MockRequestRecorder struct {
	mock *MockRequest
}

func NewMockRequest(ctrl *gomock.Controller) *MockRequest {
	mock := &MockRequest{ctrl: ctrl}
	mock.recorder = &_MockRequestRecorder{mock}
	return mock
}

func (_m *MockRequest) EXPECT() *_MockRequestRecorder {
	return _m.recorder
}

func (_m *MockRequest) Ack() error {
	ret := _m.ctrl.Call(_m, "Ack")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRequestRecorder) Ack() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Ack")
}

func (_m *MockRequest) Nack() error {
	ret := _m.ctrl.Call(_m, "Nack")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRequestRecorder) Nack() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Nack")
}

func (_m *MockRequest) Task() *broker.Task {
	ret := _m.ctrl.Call(_m, "Task")
	ret0, _ := ret[0].(*broker.Task)
	return ret0
}

func (_mr *_MockRequestRecorder) Task() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Task")
}

func (_m *MockRequest) WriteError(_param0 error) error {
	ret := _m.ctrl.Call(_m, "WriteError", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRequestRecorder) WriteError(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteError", arg0)
}

func (_m *MockRequest) WriteResult(_param0 broker.Result) error {
	ret := _m.ctrl.Call(_m, "WriteResult", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRequestRecorder) WriteResult(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteResult", arg0)
}

func (_m *MockRequest) WriteStatus(_param0 broker.Status) error {
	ret := _m.ctrl.Call(_m, "WriteStatus", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRequestRecorder) WriteStatus(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteStatus", arg0)
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bunsan/broker/connection.proto

/*
Package broker is a generated protocol buffer package.

It is generated from these files:
	bunsan/broker/connection.proto
	bunsan/broker/protocol.proto

It has these top-level messages:
	Credentials
	ConnectionParameters
	Constraints
	Task
	Status
	Result
*/
package broker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Credentials struct {
	Method      string `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Username    string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password    string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Certificate []byte `protobuf:"bytes,4,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Key         []byte `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *Credentials) Reset()                    { *m = Credentials{} }
func (m *Credentials) String() string            { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()               {}
func (*Credentials) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Credentials) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Credentials) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Credentials) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Credentials) GetCertificate() []byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *Credentials) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type ConnectionParameters struct {
	// required
	Identifier  string       `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Credentials *Credentials `protobuf:"bytes,2,opt,name=credentials" json:"credentials,omitempty"`
	Host        string       `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Port        int32        `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	VirtualHost string       `protobuf:"bytes,5,opt,name=virtual_host,json=virtualHost" json:"virtual_host,omitempty"`
}

func (m *ConnectionParameters) Reset()                    { *m = ConnectionParameters{} }
func (m *ConnectionParameters) String() string            { return proto.CompactTextString(m) }
func (*ConnectionParameters) ProtoMessage()               {}
func (*ConnectionParameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConnectionParameters) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ConnectionParameters) GetCredentials() *Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *ConnectionParameters) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ConnectionParameters) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ConnectionParameters) GetVirtualHost() string {
	if m != nil {
		return m.VirtualHost
	}
	return ""
}

type Constraints struct {
	Resource []string `protobuf:"bytes,1,rep,name=resource" json:"resource,omitempty"`
}

func (m *Constraints) Reset()                    { *m = Constraints{} }
func (m *Constraints) String() string            { return proto.CompactTextString(m) }
func (*Constraints) ProtoMessage()               {}
func (*Constraints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Constraints) GetResource() []string {
	if m != nil {
		return m.Resource
	}
	return nil
}

func init() {
	proto.RegisterType((*Credentials)(nil), "bunsan.broker.Credentials")
	proto.RegisterType((*ConnectionParameters)(nil), "bunsan.broker.ConnectionParameters")
	proto.RegisterType((*Constraints)(nil), "bunsan.broker.Constraints")
}

func init() { proto.RegisterFile("bunsan/broker/connection.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0xc7, 0x15, 0xfa, 0xa1, 0x72, 0x2e, 0x12, 0xb2, 0x10, 0xb2, 0x3a, 0x54, 0xa1, 0x53, 0x59,
	0x52, 0x09, 0x56, 0x26, 0xba, 0x30, 0xa2, 0x8c, 0x2c, 0xc8, 0x75, 0xaf, 0xaa, 0xd5, 0xd6, 0x57,
	0x9d, 0x2f, 0x20, 0x1e, 0x83, 0x27, 0xe2, 0xd5, 0x50, 0x9c, 0xb4, 0x84, 0xed, 0xfe, 0x1f, 0xc3,
	0xef, 0x6f, 0xc3, 0x74, 0x55, 0x85, 0x68, 0xc3, 0x62, 0xc5, 0xb4, 0x43, 0x5e, 0x38, 0x0a, 0x01,
	0x9d, 0x78, 0x0a, 0xc5, 0x91, 0x49, 0x48, 0x5f, 0x35, 0x79, 0xd1, 0xe4, 0xb3, 0xef, 0x0c, 0xd4,
	0x92, 0x71, 0x8d, 0x41, 0xbc, 0xdd, 0x47, 0x7d, 0x0b, 0xc3, 0x03, 0xca, 0x96, 0xd6, 0x26, 0xcb,
	0xb3, 0xf9, 0x65, 0xd9, 0x2a, 0x3d, 0x81, 0x51, 0x15, 0x91, 0x83, 0x3d, 0xa0, 0xb9, 0x48, 0xc9,
	0x59, 0xd7, 0xd9, 0xd1, 0xc6, 0xf8, 0x49, 0xbc, 0x36, 0xbd, 0x26, 0x3b, 0x69, 0x9d, 0x83, 0x72,
	0xc8, 0xe2, 0x37, 0xde, 0x59, 0x41, 0xd3, 0xcf, 0xb3, 0xf9, 0xb8, 0xec, 0x5a, 0xfa, 0x1a, 0x7a,
	0x3b, 0xfc, 0x32, 0x83, 0x94, 0xd4, 0xe7, 0xec, 0x27, 0x83, 0x9b, 0xe5, 0x99, 0xfb, 0xd5, 0xb2,
	0x3d, 0xa0, 0x20, 0x47, 0x3d, 0x05, 0xf0, 0x89, 0x74, 0xe3, 0x91, 0x5b, 0xc0, 0x8e, 0xa3, 0x9f,
	0x40, 0xb9, 0xbf, 0x2d, 0x89, 0x53, 0x3d, 0x4c, 0x8a, 0x7f, 0x8b, 0x8b, 0xce, 0xda, 0xb2, 0x5b,
	0xd7, 0x1a, 0xfa, 0x5b, 0x8a, 0xd2, 0x4e, 0x48, 0x77, 0xed, 0x1d, 0x89, 0x25, 0x71, 0x0f, 0xca,
	0x74, 0xeb, 0x3b, 0x18, 0x7f, 0x78, 0x96, 0xca, 0xee, 0xdf, 0x53, 0x7f, 0x90, 0xfa, 0xaa, 0xf5,
	0x5e, 0x28, 0xca, 0xec, 0x1e, 0xd4, 0x92, 0x42, 0x14, 0xb6, 0x3e, 0x48, 0xac, 0x1f, 0x88, 0x31,
	0x52, 0xc5, 0x0e, 0x4d, 0x96, 0xf7, 0xea, 0x07, 0x3a, 0xe9, 0xe7, 0xd1, 0xdb, 0xb0, 0x01, 0x5b,
	0x0d, 0xd3, 0x07, 0x3d, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x4c, 0x13, 0x49, 0xc2, 0x01,
	0x00, 0x00,
}

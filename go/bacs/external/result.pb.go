// Code generated by protoc-gen-go.
// source: bacs/external/result.proto
// DO NOT EDIT!

package external

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SystemResult_Status int32

const (
	SystemResult_OK      SystemResult_Status = 0
	SystemResult_FAIL    SystemResult_Status = 1
	SystemResult_PENDING SystemResult_Status = 100
	SystemResult_RUNNING SystemResult_Status = 101
)

var SystemResult_Status_name = map[int32]string{
	0:   "OK",
	1:   "FAIL",
	100: "PENDING",
	101: "RUNNING",
}
var SystemResult_Status_value = map[string]int32{
	"OK":      0,
	"FAIL":    1,
	"PENDING": 100,
	"RUNNING": 101,
}

func (x SystemResult_Status) String() string {
	return proto.EnumName(SystemResult_Status_name, int32(x))
}

type BuildResult_Status int32

const (
	BuildResult_OK   BuildResult_Status = 0
	BuildResult_FAIL BuildResult_Status = 1
)

var BuildResult_Status_name = map[int32]string{
	0: "OK",
	1: "FAIL",
}
var BuildResult_Status_value = map[string]int32{
	"OK":   0,
	"FAIL": 1,
}

func (x BuildResult_Status) String() string {
	return proto.EnumName(BuildResult_Status_name, int32(x))
}

type TestResult_Status int32

const (
	TestResult_OK                       TestResult_Status = 0
	TestResult_ABNORMAL_EXIT            TestResult_Status = 1
	TestResult_TIME_LIMIT_EXCEEDED      TestResult_Status = 2
	TestResult_REAL_TIME_LIMIT_EXCEEDED TestResult_Status = 3
	TestResult_MEMORY_LIMIT_EXCEEDED    TestResult_Status = 4
	TestResult_OUTPUT_LIMIT_EXCEEDED    TestResult_Status = 5
	TestResult_QUERIES_LIMIT_EXCEEDED   TestResult_Status = 6
	TestResult_WRONG_ANSWER             TestResult_Status = 100
	TestResult_PRESENTATION_ERROR       TestResult_Status = 101
	TestResult_INCORRECT_REQUEST        TestResult_Status = 102
	TestResult_INSUFFICIENT_DATA        TestResult_Status = 103
	TestResult_EXCESS_DATA              TestResult_Status = 104
	TestResult_FAIL_TEST                TestResult_Status = 1000
	TestResult_SKIPPED                  TestResult_Status = 2000
)

var TestResult_Status_name = map[int32]string{
	0:    "OK",
	1:    "ABNORMAL_EXIT",
	2:    "TIME_LIMIT_EXCEEDED",
	3:    "REAL_TIME_LIMIT_EXCEEDED",
	4:    "MEMORY_LIMIT_EXCEEDED",
	5:    "OUTPUT_LIMIT_EXCEEDED",
	6:    "QUERIES_LIMIT_EXCEEDED",
	100:  "WRONG_ANSWER",
	101:  "PRESENTATION_ERROR",
	102:  "INCORRECT_REQUEST",
	103:  "INSUFFICIENT_DATA",
	104:  "EXCESS_DATA",
	1000: "FAIL_TEST",
	2000: "SKIPPED",
}
var TestResult_Status_value = map[string]int32{
	"OK":                       0,
	"ABNORMAL_EXIT":            1,
	"TIME_LIMIT_EXCEEDED":      2,
	"REAL_TIME_LIMIT_EXCEEDED": 3,
	"MEMORY_LIMIT_EXCEEDED":    4,
	"OUTPUT_LIMIT_EXCEEDED":    5,
	"QUERIES_LIMIT_EXCEEDED":   6,
	"WRONG_ANSWER":             100,
	"PRESENTATION_ERROR":       101,
	"INCORRECT_REQUEST":        102,
	"INSUFFICIENT_DATA":        103,
	"EXCESS_DATA":              104,
	"FAIL_TEST":                1000,
	"SKIPPED":                  2000,
}

func (x TestResult_Status) String() string {
	return proto.EnumName(TestResult_Status_name, int32(x))
}

type SystemResult struct {
	Status SystemResult_Status `protobuf:"varint,1,opt,name=status,enum=bacs.external.SystemResult_Status" json:"status,omitempty"`
}

func (m *SystemResult) Reset()         { *m = SystemResult{} }
func (m *SystemResult) String() string { return proto.CompactTextString(m) }
func (*SystemResult) ProtoMessage()    {}

type BuildResult struct {
	Status BuildResult_Status `protobuf:"varint,1,opt,name=status,enum=bacs.external.BuildResult_Status" json:"status,omitempty"`
	Output string             `protobuf:"bytes,2,opt,name=output" json:"output,omitempty"`
}

func (m *BuildResult) Reset()         { *m = BuildResult{} }
func (m *BuildResult) String() string { return proto.CompactTextString(m) }
func (*BuildResult) ProtoMessage()    {}

type TestResult struct {
	Id            string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status        TestResult_Status `protobuf:"varint,2,opt,name=status,enum=bacs.external.TestResult_Status" json:"status,omitempty"`
	JudgeMessage  string            `protobuf:"bytes,3,opt,name=judge_message" json:"judge_message,omitempty"`
	ResourceUsage *ResourceUsage    `protobuf:"bytes,4,opt,name=resource_usage" json:"resource_usage,omitempty"`
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}

func (m *TestResult) GetResourceUsage() *ResourceUsage {
	if m != nil {
		return m.ResourceUsage
	}
	return nil
}

type TestGroupResult struct {
	Id       string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Executed bool          `protobuf:"varint,2,opt,name=executed" json:"executed,omitempty"`
	Test     []*TestResult `protobuf:"bytes,3,rep,name=test" json:"test,omitempty"`
}

func (m *TestGroupResult) Reset()         { *m = TestGroupResult{} }
func (m *TestGroupResult) String() string { return proto.CompactTextString(m) }
func (*TestGroupResult) ProtoMessage()    {}

func (m *TestGroupResult) GetTest() []*TestResult {
	if m != nil {
		return m.Test
	}
	return nil
}

type ResourceUsage struct {
	MemoryUsageBytes uint64 `protobuf:"varint,1,opt,name=memory_usage_bytes" json:"memory_usage_bytes,omitempty"`
	TimeUsageMillis  uint64 `protobuf:"varint,2,opt,name=time_usage_millis" json:"time_usage_millis,omitempty"`
}

func (m *ResourceUsage) Reset()         { *m = ResourceUsage{} }
func (m *ResourceUsage) String() string { return proto.CompactTextString(m) }
func (*ResourceUsage) ProtoMessage()    {}

type SubmitResult struct {
	Id        *SubmitResult_Id   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	System    *SystemResult      `protobuf:"bytes,2,opt,name=system" json:"system,omitempty"`
	Build     *BuildResult       `protobuf:"bytes,3,opt,name=build" json:"build,omitempty"`
	TestGroup []*TestGroupResult `protobuf:"bytes,4,rep,name=test_group" json:"test_group,omitempty"`
}

func (m *SubmitResult) Reset()         { *m = SubmitResult{} }
func (m *SubmitResult) String() string { return proto.CompactTextString(m) }
func (*SubmitResult) ProtoMessage()    {}

func (m *SubmitResult) GetId() *SubmitResult_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SubmitResult) GetSystem() *SystemResult {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *SubmitResult) GetBuild() *BuildResult {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *SubmitResult) GetTestGroup() []*TestGroupResult {
	if m != nil {
		return m.TestGroup
	}
	return nil
}

type SubmitResult_Id struct {
	Submit   *Submit_Id `protobuf:"bytes,1,opt,name=submit" json:"submit,omitempty"`
	Revision uint64     `protobuf:"varint,2,opt,name=revision" json:"revision,omitempty"`
}

func (m *SubmitResult_Id) Reset()         { *m = SubmitResult_Id{} }
func (m *SubmitResult_Id) String() string { return proto.CompactTextString(m) }
func (*SubmitResult_Id) ProtoMessage()    {}

func (m *SubmitResult_Id) GetSubmit() *Submit_Id {
	if m != nil {
		return m.Submit
	}
	return nil
}

type SubmitResult_IdList struct {
	Entry []*SubmitResult_Id `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *SubmitResult_IdList) Reset()         { *m = SubmitResult_IdList{} }
func (m *SubmitResult_IdList) String() string { return proto.CompactTextString(m) }
func (*SubmitResult_IdList) ProtoMessage()    {}

func (m *SubmitResult_IdList) GetEntry() []*SubmitResult_Id {
	if m != nil {
		return m.Entry
	}
	return nil
}

type SubmitResult_MultipleId struct {
	Submit *Submit_Id `protobuf:"bytes,1,opt,name=submit" json:"submit,omitempty"`
	// ordered by result timestamp descending
	Revision []uint64 `protobuf:"varint,2,rep,name=revision" json:"revision,omitempty"`
}

func (m *SubmitResult_MultipleId) Reset()         { *m = SubmitResult_MultipleId{} }
func (m *SubmitResult_MultipleId) String() string { return proto.CompactTextString(m) }
func (*SubmitResult_MultipleId) ProtoMessage()    {}

func (m *SubmitResult_MultipleId) GetSubmit() *Submit_Id {
	if m != nil {
		return m.Submit
	}
	return nil
}

type SubmitResult_MultipleIdList struct {
	Entry []*SubmitResult_MultipleId `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *SubmitResult_MultipleIdList) Reset()         { *m = SubmitResult_MultipleIdList{} }
func (m *SubmitResult_MultipleIdList) String() string { return proto.CompactTextString(m) }
func (*SubmitResult_MultipleIdList) ProtoMessage()    {}

func (m *SubmitResult_MultipleIdList) GetEntry() []*SubmitResult_MultipleId {
	if m != nil {
		return m.Entry
	}
	return nil
}

type SubmitResultList struct {
	Entry []*SubmitResult `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *SubmitResultList) Reset()         { *m = SubmitResultList{} }
func (m *SubmitResultList) String() string { return proto.CompactTextString(m) }
func (*SubmitResultList) ProtoMessage()    {}

func (m *SubmitResultList) GetEntry() []*SubmitResult {
	if m != nil {
		return m.Entry
	}
	return nil
}

func init() {
	proto.RegisterEnum("bacs.external.SystemResult_Status", SystemResult_Status_name, SystemResult_Status_value)
	proto.RegisterEnum("bacs.external.BuildResult_Status", BuildResult_Status_name, BuildResult_Status_value)
	proto.RegisterEnum("bacs.external.TestResult_Status", TestResult_Status_name, TestResult_Status_value)
}

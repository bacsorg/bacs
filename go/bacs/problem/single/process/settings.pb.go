// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bacs/problem/single/process/settings.proto

package process

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bacs_process "bacs/process"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Settings struct {
	ResourceLimits *bacs_process.ResourceLimits `protobuf:"bytes,1,opt,name=resource_limits,json=resourceLimits" json:"resource_limits,omitempty"`
	File           []*File                      `protobuf:"bytes,2,rep,name=file" json:"file,omitempty"`
	Execution      *Execution                   `protobuf:"bytes,3,opt,name=execution" json:"execution,omitempty"`
}

func (m *Settings) Reset()                    { *m = Settings{} }
func (m *Settings) String() string            { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()               {}
func (*Settings) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Settings) GetResourceLimits() *bacs_process.ResourceLimits {
	if m != nil {
		return m.ResourceLimits
	}
	return nil
}

func (m *Settings) GetFile() []*File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Settings) GetExecution() *Execution {
	if m != nil {
		return m.Execution
	}
	return nil
}

func init() {
	proto.RegisterType((*Settings)(nil), "bacs.problem.single.process.Settings")
}

func init() { proto.RegisterFile("bacs/problem/single/process/settings.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4a, 0x4a, 0x4c, 0x2e,
	0xd6, 0x2f, 0x28, 0xca, 0x4f, 0xca, 0x49, 0xcd, 0xd5, 0x2f, 0xce, 0xcc, 0x4b, 0xcf, 0x49, 0x05,
	0x71, 0x93, 0x53, 0x8b, 0x8b, 0xf5, 0x8b, 0x53, 0x4b, 0x4a, 0x32, 0xf3, 0xd2, 0x8b, 0xf5, 0x0a,
	0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xa4, 0x41, 0x6a, 0xf5, 0xa0, 0x6a, 0xf5, 0x20, 0x6a, 0xf5, 0xa0,
	0x6a, 0xa5, 0xb4, 0xf1, 0x19, 0x94, 0x5a, 0x91, 0x9a, 0x5c, 0x5a, 0x92, 0x99, 0x9f, 0x07, 0x31,
	0x49, 0x4a, 0x0d, 0x9f, 0xe2, 0xb4, 0x4c, 0x88, 0xb1, 0x25, 0xf9, 0x52, 0xd2, 0x30, 0x75, 0x60,
	0x89, 0xa2, 0xd4, 0xe2, 0xfc, 0xd2, 0xa2, 0x64, 0xa8, 0xa4, 0xd2, 0x39, 0x46, 0x2e, 0x8e, 0x60,
	0xa8, 0x0b, 0x85, 0x5c, 0xb9, 0xf8, 0x61, 0xd2, 0xf1, 0x39, 0x99, 0xb9, 0x99, 0x25, 0xc5, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x32, 0x7a, 0x30, 0x57, 0x83, 0xcc, 0xd0, 0x0b, 0x82, 0x2a,
	0xf2, 0x01, 0xab, 0x09, 0xe2, 0x2b, 0x42, 0xe1, 0x0b, 0x99, 0x72, 0xb1, 0x80, 0xac, 0x97, 0x60,
	0x52, 0x60, 0xd6, 0xe0, 0x36, 0x52, 0xd4, 0xc3, 0xe3, 0x63, 0x3d, 0xb7, 0xcc, 0x9c, 0xd4, 0x20,
	0xb0, 0x72, 0x21, 0x17, 0x2e, 0x4e, 0xb8, 0x17, 0x25, 0x98, 0xc1, 0xf6, 0xaa, 0xe1, 0xd5, 0xeb,
	0x0a, 0x53, 0x1d, 0x84, 0xd0, 0xe8, 0xc4, 0x19, 0xc5, 0x0e, 0x95, 0x4f, 0x62, 0x03, 0x7b, 0xd1,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x47, 0xd6, 0x2f, 0x9a, 0x9f, 0x01, 0x00, 0x00,
}

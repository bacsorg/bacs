// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bacs/problem/single/process/execution.proto

/*
Package process is a generated protocol buffer package.

It is generated from these files:
	bacs/problem/single/process/execution.proto
	bacs/problem/single/process/file.proto
	bacs/problem/single/process/settings.proto

It has these top-level messages:
	Execution
	File
	Settings
*/
package process

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bacs_file "bacs/file"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Execution_Redirection_Stream int32

const (
	Execution_Redirection_STDIN  Execution_Redirection_Stream = 0
	Execution_Redirection_STDOUT Execution_Redirection_Stream = 1
	Execution_Redirection_STDERR Execution_Redirection_Stream = 2
)

var Execution_Redirection_Stream_name = map[int32]string{
	0: "STDIN",
	1: "STDOUT",
	2: "STDERR",
}
var Execution_Redirection_Stream_value = map[string]int32{
	"STDIN":  0,
	"STDOUT": 1,
	"STDERR": 2,
}

func (x Execution_Redirection_Stream) String() string {
	return proto.EnumName(Execution_Redirection_Stream_name, int32(x))
}
func (Execution_Redirection_Stream) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

type Execution struct {
	Argument    []string                 `protobuf:"bytes,1,rep,name=argument" json:"argument,omitempty"`
	CurrentPath *bacs_file.Path          `protobuf:"bytes,2,opt,name=current_path,json=currentPath" json:"current_path,omitempty"`
	Redirection []*Execution_Redirection `protobuf:"bytes,3,rep,name=redirection" json:"redirection,omitempty"`
}

func (m *Execution) Reset()                    { *m = Execution{} }
func (m *Execution) String() string            { return proto.CompactTextString(m) }
func (*Execution) ProtoMessage()               {}
func (*Execution) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Execution) GetArgument() []string {
	if m != nil {
		return m.Argument
	}
	return nil
}

func (m *Execution) GetCurrentPath() *bacs_file.Path {
	if m != nil {
		return m.CurrentPath
	}
	return nil
}

func (m *Execution) GetRedirection() []*Execution_Redirection {
	if m != nil {
		return m.Redirection
	}
	return nil
}

type Execution_Redirection struct {
	Stream Execution_Redirection_Stream `protobuf:"varint,1,opt,name=stream,enum=bacs.problem.single.process.Execution_Redirection_Stream" json:"stream,omitempty"`
	FileId string                       `protobuf:"bytes,2,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
}

func (m *Execution_Redirection) Reset()                    { *m = Execution_Redirection{} }
func (m *Execution_Redirection) String() string            { return proto.CompactTextString(m) }
func (*Execution_Redirection) ProtoMessage()               {}
func (*Execution_Redirection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Execution_Redirection) GetStream() Execution_Redirection_Stream {
	if m != nil {
		return m.Stream
	}
	return Execution_Redirection_STDIN
}

func (m *Execution_Redirection) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func init() {
	proto.RegisterType((*Execution)(nil), "bacs.problem.single.process.Execution")
	proto.RegisterType((*Execution_Redirection)(nil), "bacs.problem.single.process.Execution.Redirection")
	proto.RegisterEnum("bacs.problem.single.process.Execution_Redirection_Stream", Execution_Redirection_Stream_name, Execution_Redirection_Stream_value)
}

func init() { proto.RegisterFile("bacs/problem/single/process/execution.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xcd, 0x6a, 0xb3, 0x40,
	0x14, 0x86, 0xbf, 0x51, 0x3e, 0x53, 0x8f, 0xa5, 0x95, 0xa1, 0x50, 0xb1, 0x1b, 0xc9, 0x4a, 0x08,
	0x8c, 0x60, 0x57, 0xdd, 0x96, 0x64, 0x91, 0x4d, 0x7f, 0x46, 0xbb, 0xe9, 0x26, 0xf8, 0x73, 0x9a,
	0x08, 0x51, 0xc3, 0x38, 0x42, 0xaf, 0xa8, 0x17, 0xd5, 0xab, 0x29, 0x33, 0x4e, 0xd3, 0xac, 0x0a,
	0xdd, 0xf9, 0xe2, 0xf3, 0x3e, 0xe7, 0x9c, 0x81, 0x45, 0x59, 0x54, 0x43, 0x72, 0x10, 0x7d, 0xb9,
	0xc7, 0x36, 0x19, 0x9a, 0x6e, 0xbb, 0x47, 0x15, 0x2b, 0x1c, 0x86, 0x04, 0xdf, 0xb1, 0x1a, 0x65,
	0xd3, 0x77, 0xec, 0x20, 0x7a, 0xd9, 0xd3, 0x1b, 0x05, 0x33, 0x03, 0xb3, 0x09, 0x66, 0x06, 0x0e,
	0xaf, 0xb4, 0xe9, 0xad, 0x51, 0xfd, 0x42, 0xee, 0xa6, 0xca, 0xfc, 0xd3, 0x02, 0x77, 0xf5, 0xad,
	0xa1, 0x21, 0x9c, 0x15, 0x62, 0x3b, 0xb6, 0xd8, 0xc9, 0x80, 0x44, 0x76, 0xec, 0xf2, 0x63, 0xa6,
	0x29, 0x9c, 0x57, 0xa3, 0x10, 0xd8, 0xc9, 0x8d, 0xea, 0x07, 0x56, 0x44, 0x62, 0x2f, 0xbd, 0x64,
	0x7a, 0xa6, 0xd2, 0xb2, 0xa7, 0x42, 0xee, 0xb8, 0x67, 0x20, 0x15, 0x68, 0x0e, 0x9e, 0xc0, 0xba,
	0x11, 0x58, 0x29, 0x7d, 0x60, 0x47, 0x76, 0xec, 0xa5, 0x29, 0xfb, 0x65, 0x4d, 0x76, 0x5c, 0x86,
	0xf1, 0x9f, 0x26, 0x3f, 0xd5, 0x84, 0x1f, 0x04, 0xbc, 0x93, 0x9f, 0xf4, 0x19, 0x9c, 0x41, 0x0a,
	0x2c, 0xda, 0x80, 0x44, 0x24, 0xbe, 0x48, 0xef, 0xfe, 0x3e, 0x80, 0x65, 0x5a, 0xc0, 0x8d, 0x88,
	0x5e, 0xc3, 0x4c, 0x9d, 0xb4, 0x69, 0x6a, 0x7d, 0xa7, 0xcb, 0x1d, 0x15, 0xd7, 0xf5, 0x7c, 0x01,
	0xce, 0x84, 0x52, 0x17, 0xfe, 0x67, 0xf9, 0x72, 0xfd, 0xe0, 0xff, 0xa3, 0x00, 0x4e, 0x96, 0x2f,
	0x1f, 0x5f, 0x72, 0x9f, 0x98, 0xef, 0x15, 0xe7, 0xbe, 0x75, 0xef, 0xbe, 0xce, 0xcc, 0xd4, 0xd2,
	0xd1, 0xcf, 0x7d, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x78, 0xf7, 0xd2, 0xd0, 0x01, 0x00,
	0x00,
}

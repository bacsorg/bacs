// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bacs/problem/problem.proto

/*
Package problem is a generated protocol buffer package.

It is generated from these files:
	bacs/problem/problem.proto
	bacs/problem/result.proto

It has these top-level messages:
	Problem
	System
	Revision
	Info
	Statement
	Profile
	Utility
	SystemResult
*/
package problem

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Problem struct {
	System    *System              `protobuf:"bytes,1,opt,name=system" json:"system,omitempty"`
	Info      *Info                `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Statement *Statement           `protobuf:"bytes,3,opt,name=statement" json:"statement,omitempty"`
	Profile   []*Profile           `protobuf:"bytes,4,rep,name=profile" json:"profile,omitempty"`
	Utility   map[string]*Utility  `protobuf:"bytes,5,rep,name=utility" json:"utility,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Extension *google_protobuf.Any `protobuf:"bytes,1000,opt,name=extension" json:"extension,omitempty"`
}

func (m *Problem) Reset()                    { *m = Problem{} }
func (m *Problem) String() string            { return proto.CompactTextString(m) }
func (*Problem) ProtoMessage()               {}
func (*Problem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Problem) GetSystem() *System {
	if m != nil {
		return m.System
	}
	return nil
}

func (m *Problem) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Problem) GetStatement() *Statement {
	if m != nil {
		return m.Statement
	}
	return nil
}

func (m *Problem) GetProfile() []*Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *Problem) GetUtility() map[string]*Utility {
	if m != nil {
		return m.Utility
	}
	return nil
}

func (m *Problem) GetExtension() *google_protobuf.Any {
	if m != nil {
		return m.Extension
	}
	return nil
}

type System struct {
	ProblemType string    `protobuf:"bytes,1,opt,name=problem_type,json=problemType" json:"problem_type,omitempty"`
	Package     string    `protobuf:"bytes,2,opt,name=package" json:"package,omitempty"`
	Revision    *Revision `protobuf:"bytes,3,opt,name=revision" json:"revision,omitempty"`
}

func (m *System) Reset()                    { *m = System{} }
func (m *System) String() string            { return proto.CompactTextString(m) }
func (*System) ProtoMessage()               {}
func (*System) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *System) GetProblemType() string {
	if m != nil {
		return m.ProblemType
	}
	return ""
}

func (m *System) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *System) GetRevision() *Revision {
	if m != nil {
		return m.Revision
	}
	return nil
}

type Revision struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Revision) Reset()                    { *m = Revision{} }
func (m *Revision) String() string            { return proto.CompactTextString(m) }
func (*Revision) ProtoMessage()               {}
func (*Revision) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Revision) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Info struct {
	Name       []*Info_Name `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	Author     []string     `protobuf:"bytes,2,rep,name=author" json:"author,omitempty"`
	Source     string       `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
	Maintainer []string     `protobuf:"bytes,4,rep,name=maintainer" json:"maintainer,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Info) GetName() []*Info_Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Info) GetAuthor() []string {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Info) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Info) GetMaintainer() []string {
	if m != nil {
		return m.Maintainer
	}
	return nil
}

type Info_Name struct {
	Language string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Info_Name) Reset()                    { *m = Info_Name{} }
func (m *Info_Name) String() string            { return proto.CompactTextString(m) }
func (*Info_Name) ProtoMessage()               {}
func (*Info_Name) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *Info_Name) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Info_Name) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Statement struct {
	Version []*Statement_Version `protobuf:"bytes,1,rep,name=version" json:"version,omitempty"`
}

func (m *Statement) Reset()                    { *m = Statement{} }
func (m *Statement) String() string            { return proto.CompactTextString(m) }
func (*Statement) ProtoMessage()               {}
func (*Statement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Statement) GetVersion() []*Statement_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type Statement_Version struct {
	Language string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Format   string `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	Package  string `protobuf:"bytes,3,opt,name=package" json:"package,omitempty"`
}

func (m *Statement_Version) Reset()                    { *m = Statement_Version{} }
func (m *Statement_Version) String() string            { return proto.CompactTextString(m) }
func (*Statement_Version) ProtoMessage()               {}
func (*Statement_Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *Statement_Version) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Statement_Version) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Statement_Version) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

type Statement_Version_Manifest struct {
	Version  *Statement_Version               `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Revision *Revision                        `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	Data     *Statement_Version_Manifest_Data `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *Statement_Version_Manifest) Reset()         { *m = Statement_Version_Manifest{} }
func (m *Statement_Version_Manifest) String() string { return proto.CompactTextString(m) }
func (*Statement_Version_Manifest) ProtoMessage()    {}
func (*Statement_Version_Manifest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0, 0}
}

func (m *Statement_Version_Manifest) GetVersion() *Statement_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Statement_Version_Manifest) GetRevision() *Revision {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *Statement_Version_Manifest) GetData() *Statement_Version_Manifest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Statement_Version_Manifest_Data struct {
	Index string `protobuf:"bytes,1,opt,name=index" json:"index,omitempty"`
}

func (m *Statement_Version_Manifest_Data) Reset()         { *m = Statement_Version_Manifest_Data{} }
func (m *Statement_Version_Manifest_Data) String() string { return proto.CompactTextString(m) }
func (*Statement_Version_Manifest_Data) ProtoMessage()    {}
func (*Statement_Version_Manifest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0, 0, 0}
}

func (m *Statement_Version_Manifest_Data) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type Profile struct {
	Description string               `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Extension   *google_protobuf.Any `protobuf:"bytes,1000,opt,name=extension" json:"extension,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Profile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Profile) GetExtension() *google_protobuf.Any {
	if m != nil {
		return m.Extension
	}
	return nil
}

type Utility struct {
	BuilderName string               `protobuf:"bytes,1,opt,name=builder_name,json=builderName" json:"builder_name,omitempty"`
	Nested      []*Utility           `protobuf:"bytes,100,rep,name=nested" json:"nested,omitempty"`
	Extension   *google_protobuf.Any `protobuf:"bytes,1000,opt,name=extension" json:"extension,omitempty"`
}

func (m *Utility) Reset()                    { *m = Utility{} }
func (m *Utility) String() string            { return proto.CompactTextString(m) }
func (*Utility) ProtoMessage()               {}
func (*Utility) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Utility) GetBuilderName() string {
	if m != nil {
		return m.BuilderName
	}
	return ""
}

func (m *Utility) GetNested() []*Utility {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *Utility) GetExtension() *google_protobuf.Any {
	if m != nil {
		return m.Extension
	}
	return nil
}

func init() {
	proto.RegisterType((*Problem)(nil), "bacs.problem.Problem")
	proto.RegisterType((*System)(nil), "bacs.problem.System")
	proto.RegisterType((*Revision)(nil), "bacs.problem.Revision")
	proto.RegisterType((*Info)(nil), "bacs.problem.Info")
	proto.RegisterType((*Info_Name)(nil), "bacs.problem.Info.Name")
	proto.RegisterType((*Statement)(nil), "bacs.problem.Statement")
	proto.RegisterType((*Statement_Version)(nil), "bacs.problem.Statement.Version")
	proto.RegisterType((*Statement_Version_Manifest)(nil), "bacs.problem.Statement.Version.Manifest")
	proto.RegisterType((*Statement_Version_Manifest_Data)(nil), "bacs.problem.Statement.Version.Manifest.Data")
	proto.RegisterType((*Profile)(nil), "bacs.problem.Profile")
	proto.RegisterType((*Utility)(nil), "bacs.problem.Utility")
}

func init() { proto.RegisterFile("bacs/problem/problem.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 625 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x63, 0x37, 0x8e, 0x27, 0x39, 0xa0, 0x55, 0x29, 0xc6, 0x42, 0x10, 0x7c, 0x40, 0x95,
	0x4a, 0x1d, 0xa9, 0x15, 0x52, 0x41, 0x5c, 0x8a, 0xe0, 0xc0, 0x01, 0x54, 0x96, 0x9f, 0x03, 0x97,
	0xb2, 0x49, 0xd6, 0xc1, 0xaa, 0xbd, 0x6b, 0xad, 0xd7, 0x55, 0xfd, 0x10, 0x48, 0x3c, 0x0c, 0x57,
	0x5e, 0x84, 0x27, 0xe0, 0x25, 0x90, 0xd0, 0xfe, 0xb5, 0x49, 0xca, 0x6f, 0x4f, 0xc9, 0xcc, 0x7c,
	0x33, 0xfb, 0xcd, 0x37, 0x33, 0x86, 0x64, 0x4a, 0x66, 0xcd, 0xa4, 0x16, 0x7c, 0x5a, 0xd2, 0xca,
	0xfd, 0x66, 0xb5, 0xe0, 0x92, 0xa3, 0x91, 0x8a, 0x65, 0xd6, 0x97, 0xdc, 0x5c, 0x70, 0xbe, 0x28,
	0xe9, 0x44, 0xc7, 0xa6, 0x6d, 0x3e, 0x21, 0xac, 0x33, 0xc0, 0xf4, 0x93, 0x0f, 0xe1, 0x91, 0x81,
	0xa1, 0xfb, 0xd0, 0x6f, 0xba, 0x46, 0xd2, 0x2a, 0xf6, 0xc6, 0xde, 0xf6, 0x70, 0x6f, 0x33, 0x5b,
	0xae, 0x92, 0xbd, 0xd6, 0x31, 0x6c, 0x31, 0xe8, 0x1e, 0x04, 0x05, 0xcb, 0x79, 0xdc, 0xd3, 0x58,
	0xb4, 0x8a, 0x7d, 0xce, 0x72, 0x8e, 0x75, 0x1c, 0x3d, 0x80, 0xa8, 0x91, 0x44, 0xd2, 0x8a, 0x32,
	0x19, 0xfb, 0x1a, 0x7c, 0x63, 0xad, 0xb0, 0x0b, 0xe3, 0x0b, 0x24, 0x9a, 0x40, 0x58, 0x0b, 0x9e,
	0x17, 0x25, 0x8d, 0x83, 0xb1, 0xbf, 0x3d, 0xdc, 0xbb, 0xbe, 0x9a, 0x74, 0x64, 0x82, 0xd8, 0xa1,
	0xd0, 0x63, 0x08, 0x5b, 0x59, 0x94, 0x85, 0xec, 0xe2, 0x0d, 0x9d, 0x90, 0x5e, 0x4a, 0xd0, 0xbf,
	0x6f, 0x0d, 0xe8, 0x19, 0x93, 0xa2, 0xc3, 0x2e, 0x05, 0xed, 0x43, 0x44, 0xcf, 0x24, 0x65, 0x4d,
	0xc1, 0x59, 0xfc, 0x3d, 0xb4, 0xfd, 0x1b, 0xdd, 0x32, 0xa7, 0x5b, 0x76, 0xc8, 0x3a, 0x7c, 0x81,
	0x4b, 0x5e, 0xc1, 0x68, 0xb9, 0x1a, 0xba, 0x06, 0xfe, 0x09, 0xed, 0xb4, 0x7a, 0x11, 0x56, 0x7f,
	0xd1, 0x0e, 0x6c, 0x9c, 0x92, 0xb2, 0xa5, 0x56, 0xa5, 0xb5, 0x1e, 0x6c, 0x32, 0x36, 0x98, 0x47,
	0xbd, 0x03, 0x2f, 0xed, 0xa0, 0x6f, 0x74, 0x46, 0x77, 0x61, 0x64, 0x71, 0xc7, 0xb2, 0xab, 0xa9,
	0xad, 0x3a, 0xb4, 0xbe, 0x37, 0x5d, 0x4d, 0x51, 0x0c, 0x61, 0x4d, 0x66, 0x27, 0x64, 0x61, 0xea,
	0x47, 0xd8, 0x99, 0x68, 0x0f, 0x06, 0x82, 0x9e, 0x16, 0xba, 0x1b, 0xa3, 0xf9, 0xd6, 0xea, 0xd3,
	0xd8, 0x46, 0xf1, 0x39, 0x2e, 0x1d, 0xc3, 0xc0, 0x79, 0xd1, 0xa6, 0xe3, 0xad, 0x5e, 0x1d, 0x59,
	0x82, 0xe9, 0x57, 0x0f, 0x02, 0x35, 0x59, 0xb4, 0x03, 0x01, 0x23, 0x95, 0x8a, 0xfa, 0x97, 0xc7,
	0xa9, 0x10, 0xd9, 0x4b, 0x52, 0x51, 0xac, 0x41, 0x68, 0x0b, 0xfa, 0xa4, 0x95, 0x1f, 0xb9, 0x88,
	0x7b, 0x63, 0x7f, 0x3b, 0xc2, 0xd6, 0x52, 0xfe, 0x86, 0xb7, 0x62, 0x46, 0x35, 0xc3, 0x08, 0x5b,
	0x0b, 0xdd, 0x06, 0xa8, 0x48, 0xc1, 0x24, 0x29, 0x18, 0x15, 0x7a, 0xf8, 0x11, 0x5e, 0xf2, 0x24,
	0x07, 0x10, 0xa8, 0xea, 0x28, 0x81, 0x41, 0x49, 0xd8, 0xa2, 0x55, 0xed, 0x1b, 0x71, 0xce, 0xed,
	0x0b, 0xfe, 0x46, 0x17, 0xcb, 0xff, 0x47, 0x0f, 0xa2, 0xf3, 0x65, 0x43, 0x0f, 0x21, 0x3c, 0xa5,
	0x42, 0x4b, 0x64, 0xfa, 0xb8, 0xf3, 0x9b, 0xb5, 0xcc, 0xde, 0x19, 0x18, 0x76, 0xf8, 0xe4, 0x4b,
	0x0f, 0x42, 0xeb, 0xfc, 0x23, 0x8d, 0x2d, 0xe8, 0xe7, 0x5c, 0x54, 0x44, 0x5a, 0x1e, 0xd6, 0x5a,
	0x1e, 0x9c, 0xbf, 0x32, 0xb8, 0xe4, 0x9b, 0x07, 0x83, 0x17, 0x84, 0x15, 0x39, 0x6d, 0xd6, 0x18,
	0x7a, 0xff, 0xc3, 0x70, 0x65, 0x01, 0x7a, 0xff, 0xb6, 0x00, 0xe8, 0x10, 0x82, 0x39, 0x91, 0xc4,
	0x2e, 0xcc, 0xee, 0x5f, 0xde, 0xca, 0x1c, 0xcd, 0xec, 0x29, 0x91, 0x04, 0xeb, 0xd4, 0xe4, 0x16,
	0x04, 0xca, 0x52, 0xfa, 0x17, 0x6c, 0x4e, 0xcf, 0xac, 0x22, 0xc6, 0x48, 0x3f, 0xe8, 0x6f, 0x8d,
	0xbe, 0xd6, 0x31, 0x0c, 0xe7, 0xb4, 0x99, 0x89, 0xa2, 0x96, 0xae, 0xbd, 0x08, 0x2f, 0xbb, 0xae,
	0x74, 0x91, 0xe9, 0x67, 0x0f, 0x42, 0x7b, 0x55, 0xea, 0x80, 0xa6, 0x6d, 0x51, 0xce, 0xa9, 0x38,
	0xb6, 0xcb, 0xaa, 0xdf, 0xb0, 0x3e, 0xbd, 0x42, 0xbb, 0xd0, 0x67, 0xb4, 0x91, 0x74, 0x1e, 0xcf,
	0x7f, 0xf5, 0x8d, 0x71, 0xf7, 0x69, 0x41, 0x57, 0xa2, 0xf4, 0x24, 0x7a, 0x1f, 0xda, 0x7a, 0xd3,
	0xbe, 0xc6, 0xec, 0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x96, 0xf6, 0x69, 0xba, 0x05, 0x00,
	0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bacs/process/source.proto

package process

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bacs_utility "bacs/utility"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BuildResult_Status int32

const (
	BuildResult_OK     BuildResult_Status = 0
	BuildResult_FAILED BuildResult_Status = 1
)

var BuildResult_Status_name = map[int32]string{
	0: "OK",
	1: "FAILED",
}
var BuildResult_Status_value = map[string]int32{
	"OK":     0,
	"FAILED": 1,
}

func (x BuildResult_Status) String() string {
	return proto.EnumName(BuildResult_Status_name, int32(x))
}
func (BuildResult_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4, 0} }

type ExecutionResult_Status int32

const (
	ExecutionResult_OK                       ExecutionResult_Status = 0
	ExecutionResult_ABNORMAL_EXIT            ExecutionResult_Status = 1
	ExecutionResult_MEMORY_LIMIT_EXCEEDED    ExecutionResult_Status = 2
	ExecutionResult_TIME_LIMIT_EXCEEDED      ExecutionResult_Status = 3
	ExecutionResult_OUTPUT_LIMIT_EXCEEDED    ExecutionResult_Status = 4
	ExecutionResult_REAL_TIME_LIMIT_EXCEEDED ExecutionResult_Status = 5
	ExecutionResult_TERMINATED_BY_SYSTEM     ExecutionResult_Status = 6
	ExecutionResult_FAILED                   ExecutionResult_Status = 7
)

var ExecutionResult_Status_name = map[int32]string{
	0: "OK",
	1: "ABNORMAL_EXIT",
	2: "MEMORY_LIMIT_EXCEEDED",
	3: "TIME_LIMIT_EXCEEDED",
	4: "OUTPUT_LIMIT_EXCEEDED",
	5: "REAL_TIME_LIMIT_EXCEEDED",
	6: "TERMINATED_BY_SYSTEM",
	7: "FAILED",
}
var ExecutionResult_Status_value = map[string]int32{
	"OK":                       0,
	"ABNORMAL_EXIT":            1,
	"MEMORY_LIMIT_EXCEEDED":    2,
	"TIME_LIMIT_EXCEEDED":      3,
	"OUTPUT_LIMIT_EXCEEDED":    4,
	"REAL_TIME_LIMIT_EXCEEDED": 5,
	"TERMINATED_BY_SYSTEM":     6,
	"FAILED":                   7,
}

func (x ExecutionResult_Status) String() string {
	return proto.EnumName(ExecutionResult_Status_name, int32(x))
}
func (ExecutionResult_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{5, 0} }

type Source struct {
	Data     []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Archiver *bacs_utility.Archiver `protobuf:"bytes,2,opt,name=archiver" json:"archiver,omitempty"`
}

func (m *Source) Reset()                    { *m = Source{} }
func (m *Source) String() string            { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()               {}
func (*Source) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Source) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Source) GetArchiver() *bacs_utility.Archiver {
	if m != nil {
		return m.Archiver
	}
	return nil
}

type Buildable struct {
	Source        *Source        `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	BuildSettings *BuildSettings `protobuf:"bytes,2,opt,name=build_settings,json=buildSettings" json:"build_settings,omitempty"`
}

func (m *Buildable) Reset()                    { *m = Buildable{} }
func (m *Buildable) String() string            { return proto.CompactTextString(m) }
func (*Buildable) ProtoMessage()               {}
func (*Buildable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Buildable) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Buildable) GetBuildSettings() *BuildSettings {
	if m != nil {
		return m.BuildSettings
	}
	return nil
}

type BuildSettings struct {
	// required
	Config *BuilderConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	// / Constraints for build system
	ResourceLimits *ResourceLimits `protobuf:"bytes,2,opt,name=resource_limits,json=resourceLimits" json:"resource_limits,omitempty"`
}

func (m *BuildSettings) Reset()                    { *m = BuildSettings{} }
func (m *BuildSettings) String() string            { return proto.CompactTextString(m) }
func (*BuildSettings) ProtoMessage()               {}
func (*BuildSettings) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *BuildSettings) GetConfig() *BuilderConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *BuildSettings) GetResourceLimits() *ResourceLimits {
	if m != nil {
		return m.ResourceLimits
	}
	return nil
}

// !
// One of implemented build systems.
// For simple cases it may be compiler name with options,
// e.g. {type = "gcc", arguments = ["-O2"]}.
type BuilderConfig struct {
	// required
	Type     string   `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Argument []string `protobuf:"bytes,2,rep,name=argument" json:"argument,omitempty"`
}

func (m *BuilderConfig) Reset()                    { *m = BuilderConfig{} }
func (m *BuilderConfig) String() string            { return proto.CompactTextString(m) }
func (*BuilderConfig) ProtoMessage()               {}
func (*BuilderConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *BuilderConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *BuilderConfig) GetArgument() []string {
	if m != nil {
		return m.Argument
	}
	return nil
}

type BuildResult struct {
	Status    BuildResult_Status `protobuf:"varint,1,opt,name=status,enum=bacs.process.BuildResult_Status" json:"status,omitempty"`
	Execution *ExecutionResult   `protobuf:"bytes,2,opt,name=execution" json:"execution,omitempty"`
	Output    []byte             `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (m *BuildResult) Reset()                    { *m = BuildResult{} }
func (m *BuildResult) String() string            { return proto.CompactTextString(m) }
func (*BuildResult) ProtoMessage()               {}
func (*BuildResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *BuildResult) GetStatus() BuildResult_Status {
	if m != nil {
		return m.Status
	}
	return BuildResult_OK
}

func (m *BuildResult) GetExecution() *ExecutionResult {
	if m != nil {
		return m.Execution
	}
	return nil
}

func (m *BuildResult) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

type ExecutionResult struct {
	Status ExecutionResult_Status `protobuf:"varint,1,opt,name=status,enum=bacs.process.ExecutionResult_Status" json:"status,omitempty"`
	// Types that are valid to be assigned to Termination:
	//	*ExecutionResult_ExitStatus
	//	*ExecutionResult_TermSig
	Termination   isExecutionResult_Termination `protobuf_oneof:"termination"`
	ResourceUsage *ResourceUsage                `protobuf:"bytes,4,opt,name=resource_usage,json=resourceUsage" json:"resource_usage,omitempty"`
	Full          []byte                        `protobuf:"bytes,5,opt,name=full,proto3" json:"full,omitempty"`
}

func (m *ExecutionResult) Reset()                    { *m = ExecutionResult{} }
func (m *ExecutionResult) String() string            { return proto.CompactTextString(m) }
func (*ExecutionResult) ProtoMessage()               {}
func (*ExecutionResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type isExecutionResult_Termination interface {
	isExecutionResult_Termination()
}

type ExecutionResult_ExitStatus struct {
	ExitStatus int32 `protobuf:"varint,2,opt,name=exit_status,json=exitStatus,oneof"`
}
type ExecutionResult_TermSig struct {
	TermSig int32 `protobuf:"varint,3,opt,name=term_sig,json=termSig,oneof"`
}

func (*ExecutionResult_ExitStatus) isExecutionResult_Termination() {}
func (*ExecutionResult_TermSig) isExecutionResult_Termination()    {}

func (m *ExecutionResult) GetTermination() isExecutionResult_Termination {
	if m != nil {
		return m.Termination
	}
	return nil
}

func (m *ExecutionResult) GetStatus() ExecutionResult_Status {
	if m != nil {
		return m.Status
	}
	return ExecutionResult_OK
}

func (m *ExecutionResult) GetExitStatus() int32 {
	if x, ok := m.GetTermination().(*ExecutionResult_ExitStatus); ok {
		return x.ExitStatus
	}
	return 0
}

func (m *ExecutionResult) GetTermSig() int32 {
	if x, ok := m.GetTermination().(*ExecutionResult_TermSig); ok {
		return x.TermSig
	}
	return 0
}

func (m *ExecutionResult) GetResourceUsage() *ResourceUsage {
	if m != nil {
		return m.ResourceUsage
	}
	return nil
}

func (m *ExecutionResult) GetFull() []byte {
	if m != nil {
		return m.Full
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExecutionResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExecutionResult_OneofMarshaler, _ExecutionResult_OneofUnmarshaler, _ExecutionResult_OneofSizer, []interface{}{
		(*ExecutionResult_ExitStatus)(nil),
		(*ExecutionResult_TermSig)(nil),
	}
}

func _ExecutionResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExecutionResult)
	// termination
	switch x := m.Termination.(type) {
	case *ExecutionResult_ExitStatus:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ExitStatus))
	case *ExecutionResult_TermSig:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.TermSig))
	case nil:
	default:
		return fmt.Errorf("ExecutionResult.Termination has unexpected type %T", x)
	}
	return nil
}

func _ExecutionResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExecutionResult)
	switch tag {
	case 2: // termination.exit_status
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Termination = &ExecutionResult_ExitStatus{int32(x)}
		return true, err
	case 3: // termination.term_sig
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Termination = &ExecutionResult_TermSig{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _ExecutionResult_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExecutionResult)
	// termination
	switch x := m.Termination.(type) {
	case *ExecutionResult_ExitStatus:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ExitStatus))
	case *ExecutionResult_TermSig:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.TermSig))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Source)(nil), "bacs.process.Source")
	proto.RegisterType((*Buildable)(nil), "bacs.process.Buildable")
	proto.RegisterType((*BuildSettings)(nil), "bacs.process.BuildSettings")
	proto.RegisterType((*BuilderConfig)(nil), "bacs.process.BuilderConfig")
	proto.RegisterType((*BuildResult)(nil), "bacs.process.BuildResult")
	proto.RegisterType((*ExecutionResult)(nil), "bacs.process.ExecutionResult")
	proto.RegisterEnum("bacs.process.BuildResult_Status", BuildResult_Status_name, BuildResult_Status_value)
	proto.RegisterEnum("bacs.process.ExecutionResult_Status", ExecutionResult_Status_name, ExecutionResult_Status_value)
}

func init() { proto.RegisterFile("bacs/process/source.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xcd, 0x4e, 0xdb, 0x4c,
	0x14, 0x86, 0x71, 0x02, 0x86, 0x9c, 0x10, 0xc8, 0x37, 0x1f, 0xa5, 0xe6, 0xa7, 0x52, 0x6a, 0x75,
	0xc1, 0xa2, 0x32, 0x52, 0xd8, 0x54, 0x6a, 0xa5, 0xca, 0x26, 0x53, 0xd5, 0x6a, 0x4c, 0xd0, 0xd8,
	0x48, 0xd0, 0x8d, 0xe5, 0x98, 0xc1, 0x1d, 0xc9, 0xc4, 0x91, 0x3d, 0xae, 0x60, 0xd1, 0x2b, 0xe8,
	0xc5, 0x74, 0xd7, 0x45, 0xaf, 0xae, 0x9a, 0xf1, 0x98, 0xc6, 0x69, 0xd4, 0xdd, 0x1c, 0xbf, 0xcf,
	0x79, 0xe7, 0xfc, 0x4c, 0x02, 0x07, 0xd3, 0x28, 0x2e, 0x4e, 0xe7, 0x79, 0x16, 0xd3, 0xa2, 0x38,
	0x2d, 0xb2, 0x32, 0x8f, 0xa9, 0x35, 0xcf, 0x33, 0x9e, 0xa1, 0x6d, 0x21, 0x59, 0x4a, 0x3a, 0x3c,
	0x6a, 0x80, 0x39, 0x5d, 0x44, 0x95, 0x58, 0x72, 0x96, 0x32, 0xfe, 0x78, 0x1a, 0xe5, 0xf1, 0x17,
	0xf6, 0x95, 0xe6, 0x95, 0x68, 0x5e, 0x82, 0xee, 0x4b, 0x18, 0x21, 0x58, 0xbf, 0x8d, 0x78, 0x64,
	0x68, 0x03, 0xed, 0x64, 0x9b, 0xc8, 0x33, 0x1a, 0xc2, 0x56, 0xcd, 0x1b, 0xad, 0x81, 0x76, 0xd2,
	0x1d, 0xee, 0x5b, 0xf2, 0x62, 0xe5, 0x66, 0xd9, 0x4a, 0x25, 0x4f, 0x9c, 0xf9, 0x0d, 0x3a, 0x4e,
	0xc9, 0xd2, 0xdb, 0x68, 0x9a, 0x52, 0xf4, 0x1a, 0xf4, 0xaa, 0x16, 0x69, 0xdb, 0x1d, 0xee, 0x59,
	0x8b, 0x75, 0x5b, 0xd5, 0xd5, 0x44, 0x31, 0xc8, 0x81, 0x9d, 0xa9, 0x48, 0x0d, 0x0b, 0xca, 0x39,
	0x9b, 0x25, 0x85, 0xba, 0xf4, 0xa8, 0x99, 0x25, 0xed, 0x7d, 0x85, 0x90, 0xde, 0x74, 0x31, 0x34,
	0xbf, 0x6b, 0xd0, 0x6b, 0x00, 0xe8, 0x0c, 0xf4, 0x38, 0x9b, 0xdd, 0xb1, 0x44, 0xd5, 0xb0, 0xca,
	0x8d, 0xe6, 0xe7, 0x12, 0x21, 0x0a, 0x45, 0x18, 0x76, 0xeb, 0x31, 0x86, 0x29, 0xbb, 0x67, 0xbc,
	0xae, 0xe5, 0xb8, 0x99, 0x4d, 0x14, 0x34, 0x96, 0x0c, 0xd9, 0xc9, 0x1b, 0xb1, 0xf9, 0x5e, 0x15,
	0x53, 0xfb, 0x8b, 0x29, 0xf3, 0xc7, 0x79, 0x35, 0x8e, 0x0e, 0x91, 0x67, 0x74, 0x28, 0xa6, 0x9c,
	0x94, 0xf7, 0x74, 0xc6, 0x8d, 0xd6, 0xa0, 0x7d, 0xd2, 0x21, 0x4f, 0xb1, 0xf9, 0x4b, 0x83, 0xae,
	0x74, 0x20, 0xb4, 0x28, 0x53, 0x8e, 0xde, 0x80, 0x5e, 0xf0, 0x88, 0x97, 0x85, 0x74, 0xd8, 0x19,
	0x0e, 0x56, 0x34, 0x53, 0xa1, 0x96, 0x2f, 0x39, 0xa2, 0x78, 0xf4, 0x16, 0x3a, 0xf4, 0x81, 0xc6,
	0x25, 0x67, 0xd9, 0x4c, 0xf5, 0xf2, 0xa2, 0x99, 0x8c, 0x6b, 0xb9, 0x32, 0x20, 0x7f, 0x78, 0xb4,
	0x0f, 0x7a, 0x56, 0xf2, 0x79, 0xc9, 0x8d, 0xb6, 0x7c, 0x1e, 0x2a, 0x32, 0x8f, 0x41, 0xaf, 0xae,
	0x41, 0x3a, 0xb4, 0x26, 0x9f, 0xfa, 0x6b, 0x08, 0x40, 0xff, 0x60, 0xbb, 0x63, 0x3c, 0xea, 0x6b,
	0xe6, 0x8f, 0x36, 0xec, 0x2e, 0x99, 0xa2, 0x77, 0x4b, 0x0d, 0xbc, 0xfa, 0x67, 0x0d, 0xcb, 0x4d,
	0xbc, 0x84, 0x2e, 0x7d, 0x60, 0x3c, 0x54, 0x16, 0xa2, 0x8d, 0x8d, 0x8f, 0x6b, 0x04, 0xc4, 0x47,
	0x55, 0xc8, 0x11, 0x6c, 0x71, 0x9a, 0xdf, 0x87, 0x05, 0x4b, 0x64, 0xb1, 0x42, 0xdf, 0x14, 0x5f,
	0x7c, 0x96, 0x88, 0x17, 0xf6, 0xb4, 0xd6, 0xb2, 0x88, 0x12, 0x6a, 0xac, 0xaf, 0x7a, 0x13, 0xf5,
	0x56, 0xaf, 0x04, 0x42, 0x7a, 0xf9, 0x62, 0x28, 0x56, 0x78, 0x57, 0xa6, 0xa9, 0xb1, 0x51, 0xfd,
	0x50, 0xc4, 0xd9, 0xfc, 0xa9, 0xfd, 0x35, 0x88, 0xff, 0xa0, 0x67, 0x3b, 0x17, 0x13, 0xe2, 0xd9,
	0xe3, 0x10, 0x5f, 0xbb, 0x41, 0x5f, 0x43, 0x07, 0xf0, 0xcc, 0xc3, 0xde, 0x84, 0xdc, 0x84, 0x63,
	0xd7, 0x73, 0x83, 0x10, 0x5f, 0x9f, 0x63, 0x3c, 0xc2, 0xa3, 0x7e, 0x0b, 0x3d, 0x87, 0xff, 0x03,
	0xd7, 0xc3, 0xcb, 0x42, 0x5b, 0xe4, 0x4c, 0xae, 0x82, 0xcb, 0xab, 0x60, 0x59, 0x5a, 0x47, 0xc7,
	0x60, 0x10, 0x6c, 0x8f, 0xc3, 0x55, 0x89, 0x1b, 0xc8, 0x80, 0xbd, 0x00, 0x13, 0xcf, 0xbd, 0xb0,
	0x03, 0x3c, 0x0a, 0x9d, 0x9b, 0xd0, 0xbf, 0xf1, 0x03, 0xec, 0xf5, 0xf5, 0x85, 0x15, 0x6d, 0x3a,
	0x3d, 0xe8, 0x8a, 0xd9, 0xb0, 0x59, 0x24, 0x86, 0xee, 0x74, 0x3e, 0x6f, 0xaa, 0x19, 0x4c, 0x75,
	0xf9, 0x07, 0x71, 0xf6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xea, 0x57, 0x5d, 0x1e, 0x85, 0x04, 0x00,
	0x00,
}

// Code generated by protoc-gen-go.
// source: bacs/process/source.proto
// DO NOT EDIT!

package process

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bacs_utility "github.com/bacsorg/common/go/bacs/utility"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BuildResult_Status int32

const (
	BuildResult_OK     BuildResult_Status = 0
	BuildResult_FAILED BuildResult_Status = 1
)

var BuildResult_Status_name = map[int32]string{
	0: "OK",
	1: "FAILED",
}
var BuildResult_Status_value = map[string]int32{
	"OK":     0,
	"FAILED": 1,
}

func (x BuildResult_Status) String() string {
	return proto.EnumName(BuildResult_Status_name, int32(x))
}

type ExecutionResult_Status int32

const (
	ExecutionResult_OK                       ExecutionResult_Status = 0
	ExecutionResult_ABNORMAL_EXIT            ExecutionResult_Status = 1
	ExecutionResult_MEMORY_LIMIT_EXCEEDED    ExecutionResult_Status = 2
	ExecutionResult_TIME_LIMIT_EXCEEDED      ExecutionResult_Status = 3
	ExecutionResult_OUTPUT_LIMIT_EXCEEDED    ExecutionResult_Status = 4
	ExecutionResult_REAL_TIME_LIMIT_EXCEEDED ExecutionResult_Status = 5
	ExecutionResult_TERMINATED_BY_SYSTEM     ExecutionResult_Status = 6
	ExecutionResult_FAILED                   ExecutionResult_Status = 7
)

var ExecutionResult_Status_name = map[int32]string{
	0: "OK",
	1: "ABNORMAL_EXIT",
	2: "MEMORY_LIMIT_EXCEEDED",
	3: "TIME_LIMIT_EXCEEDED",
	4: "OUTPUT_LIMIT_EXCEEDED",
	5: "REAL_TIME_LIMIT_EXCEEDED",
	6: "TERMINATED_BY_SYSTEM",
	7: "FAILED",
}
var ExecutionResult_Status_value = map[string]int32{
	"OK":                       0,
	"ABNORMAL_EXIT":            1,
	"MEMORY_LIMIT_EXCEEDED":    2,
	"TIME_LIMIT_EXCEEDED":      3,
	"OUTPUT_LIMIT_EXCEEDED":    4,
	"REAL_TIME_LIMIT_EXCEEDED": 5,
	"TERMINATED_BY_SYSTEM":     6,
	"FAILED":                   7,
}

func (x ExecutionResult_Status) String() string {
	return proto.EnumName(ExecutionResult_Status_name, int32(x))
}

type Source struct {
	Data     []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Archiver *bacs_utility.Archiver `protobuf:"bytes,2,opt,name=archiver" json:"archiver,omitempty"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}

func (m *Source) GetArchiver() *bacs_utility.Archiver {
	if m != nil {
		return m.Archiver
	}
	return nil
}

type Buildable struct {
	Source        *Source        `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	BuildSettings *BuildSettings `protobuf:"bytes,2,opt,name=build_settings" json:"build_settings,omitempty"`
}

func (m *Buildable) Reset()         { *m = Buildable{} }
func (m *Buildable) String() string { return proto.CompactTextString(m) }
func (*Buildable) ProtoMessage()    {}

func (m *Buildable) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Buildable) GetBuildSettings() *BuildSettings {
	if m != nil {
		return m.BuildSettings
	}
	return nil
}

type BuildSettings struct {
	// required
	Config *BuilderConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	// / Constraints for build system
	ResourceLimits *ResourceLimits `protobuf:"bytes,2,opt,name=resource_limits" json:"resource_limits,omitempty"`
}

func (m *BuildSettings) Reset()         { *m = BuildSettings{} }
func (m *BuildSettings) String() string { return proto.CompactTextString(m) }
func (*BuildSettings) ProtoMessage()    {}

func (m *BuildSettings) GetConfig() *BuilderConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *BuildSettings) GetResourceLimits() *ResourceLimits {
	if m != nil {
		return m.ResourceLimits
	}
	return nil
}

// !
// One of implemented build systems.
// For simple cases it may be compiler name with options,
// e.g. {type = "gcc", arguments = ["-O2"]}.
type BuilderConfig struct {
	// required
	Type     string   `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Argument []string `protobuf:"bytes,2,rep,name=argument" json:"argument,omitempty"`
}

func (m *BuilderConfig) Reset()         { *m = BuilderConfig{} }
func (m *BuilderConfig) String() string { return proto.CompactTextString(m) }
func (*BuilderConfig) ProtoMessage()    {}

type BuildResult struct {
	Status    BuildResult_Status `protobuf:"varint,1,opt,name=status,enum=bacs.process.BuildResult_Status" json:"status,omitempty"`
	Execution *ExecutionResult   `protobuf:"bytes,2,opt,name=execution" json:"execution,omitempty"`
	Output    []byte             `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (m *BuildResult) Reset()         { *m = BuildResult{} }
func (m *BuildResult) String() string { return proto.CompactTextString(m) }
func (*BuildResult) ProtoMessage()    {}

func (m *BuildResult) GetExecution() *ExecutionResult {
	if m != nil {
		return m.Execution
	}
	return nil
}

type ExecutionResult struct {
	Status ExecutionResult_Status `protobuf:"varint,1,opt,name=status,enum=bacs.process.ExecutionResult_Status" json:"status,omitempty"`
	// Types that are valid to be assigned to Termination:
	//	*ExecutionResult_ExitStatus
	//	*ExecutionResult_TermSig
	Termination   isExecutionResult_Termination `protobuf_oneof:"termination"`
	ResourceUsage *ResourceUsage                `protobuf:"bytes,4,opt,name=resource_usage" json:"resource_usage,omitempty"`
	Full          []byte                        `protobuf:"bytes,5,opt,name=full,proto3" json:"full,omitempty"`
}

func (m *ExecutionResult) Reset()         { *m = ExecutionResult{} }
func (m *ExecutionResult) String() string { return proto.CompactTextString(m) }
func (*ExecutionResult) ProtoMessage()    {}

type isExecutionResult_Termination interface {
	isExecutionResult_Termination()
}

type ExecutionResult_ExitStatus struct {
	ExitStatus int32 `protobuf:"varint,2,opt,name=exit_status,oneof"`
}
type ExecutionResult_TermSig struct {
	TermSig int32 `protobuf:"varint,3,opt,name=term_sig,oneof"`
}

func (*ExecutionResult_ExitStatus) isExecutionResult_Termination() {}
func (*ExecutionResult_TermSig) isExecutionResult_Termination()    {}

func (m *ExecutionResult) GetTermination() isExecutionResult_Termination {
	if m != nil {
		return m.Termination
	}
	return nil
}

func (m *ExecutionResult) GetExitStatus() int32 {
	if x, ok := m.GetTermination().(*ExecutionResult_ExitStatus); ok {
		return x.ExitStatus
	}
	return 0
}

func (m *ExecutionResult) GetTermSig() int32 {
	if x, ok := m.GetTermination().(*ExecutionResult_TermSig); ok {
		return x.TermSig
	}
	return 0
}

func (m *ExecutionResult) GetResourceUsage() *ResourceUsage {
	if m != nil {
		return m.ResourceUsage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExecutionResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), []interface{}) {
	return _ExecutionResult_OneofMarshaler, _ExecutionResult_OneofUnmarshaler, []interface{}{
		(*ExecutionResult_ExitStatus)(nil),
		(*ExecutionResult_TermSig)(nil),
	}
}

func _ExecutionResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExecutionResult)
	// termination
	switch x := m.Termination.(type) {
	case *ExecutionResult_ExitStatus:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ExitStatus))
	case *ExecutionResult_TermSig:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.TermSig))
	case nil:
	default:
		return fmt.Errorf("ExecutionResult.Termination has unexpected type %T", x)
	}
	return nil
}

func _ExecutionResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExecutionResult)
	switch tag {
	case 2: // termination.exit_status
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Termination = &ExecutionResult_ExitStatus{int32(x)}
		return true, err
	case 3: // termination.term_sig
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Termination = &ExecutionResult_TermSig{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func init() {
	proto.RegisterEnum("bacs.process.BuildResult_Status", BuildResult_Status_name, BuildResult_Status_value)
	proto.RegisterEnum("bacs.process.ExecutionResult_Status", ExecutionResult_Status_name, ExecutionResult_Status_value)
}

// Code generated by protoc-gen-go.
// source: bunsan/broker/rabbit/connection.proto
// DO NOT EDIT!

/*
Package rabbit is a generated protocol buffer package.

It is generated from these files:
	bunsan/broker/rabbit/connection.proto

It has these top-level messages:
	RabbitTask
	RabbitStatus
	RabbitResult
*/
package rabbit

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bunsan_broker "github.com/bunsanorg/broker/go/bunsan/broker"
import bunsan_broker1 "github.com/bunsanorg/broker/go/bunsan/broker"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RabbitTask struct {
	Identifier  string                     `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Task        *bunsan_broker1.Task       `protobuf:"bytes,2,opt,name=task" json:"task,omitempty"`
	Constraints *bunsan_broker.Constraints `protobuf:"bytes,3,opt,name=constraints" json:"constraints,omitempty"`
	StatusQueue string                     `protobuf:"bytes,4,opt,name=status_queue" json:"status_queue,omitempty"`
	ResultQueue string                     `protobuf:"bytes,5,opt,name=result_queue" json:"result_queue,omitempty"`
	ErrorQueue  string                     `protobuf:"bytes,6,opt,name=error_queue" json:"error_queue,omitempty"`
}

func (m *RabbitTask) Reset()         { *m = RabbitTask{} }
func (m *RabbitTask) String() string { return proto.CompactTextString(m) }
func (*RabbitTask) ProtoMessage()    {}

func (m *RabbitTask) GetTask() *bunsan_broker1.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *RabbitTask) GetConstraints() *bunsan_broker.Constraints {
	if m != nil {
		return m.Constraints
	}
	return nil
}

type RabbitStatus struct {
	Identifier string                 `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Status     *bunsan_broker1.Status `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *RabbitStatus) Reset()         { *m = RabbitStatus{} }
func (m *RabbitStatus) String() string { return proto.CompactTextString(m) }
func (*RabbitStatus) ProtoMessage()    {}

func (m *RabbitStatus) GetStatus() *bunsan_broker1.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type RabbitResult struct {
	Identifier string                 `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Result     *bunsan_broker1.Result `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *RabbitResult) Reset()         { *m = RabbitResult{} }
func (m *RabbitResult) String() string { return proto.CompactTextString(m) }
func (*RabbitResult) ProtoMessage()    {}

func (m *RabbitResult) GetResult() *bunsan_broker1.Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// Code generated by protoc-gen-go.
// source: bunsan/broker/protocol.proto
// DO NOT EDIT!

package broker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Result_Status int32

const (
	Result_OK    Result_Status = 0
	Result_ERROR Result_Status = 1
	// proto errors
	Result_PROTO_ERROR Result_Status = 100
	// worker errors
	Result_WORKER_ERROR         Result_Status = 200
	Result_UNKNOWN_WORKER       Result_Status = 201
	Result_INCOMPATIBLE_PACKAGE Result_Status = 202
	// package errors
	Result_PACKAGE_ERROR       Result_Status = 300
	Result_PACKAGE_NOT_FOUND   Result_Status = 301
	Result_PACKAGE_BUILD_ERROR Result_Status = 302
	// execution errors
	Result_EXECUTION_ERROR   Result_Status = 400
	Result_EXECUTION_TIMEOUT Result_Status = 401
)

var Result_Status_name = map[int32]string{
	0:   "OK",
	1:   "ERROR",
	100: "PROTO_ERROR",
	200: "WORKER_ERROR",
	201: "UNKNOWN_WORKER",
	202: "INCOMPATIBLE_PACKAGE",
	300: "PACKAGE_ERROR",
	301: "PACKAGE_NOT_FOUND",
	302: "PACKAGE_BUILD_ERROR",
	400: "EXECUTION_ERROR",
	401: "EXECUTION_TIMEOUT",
}
var Result_Status_value = map[string]int32{
	"OK":                   0,
	"ERROR":                1,
	"PROTO_ERROR":          100,
	"WORKER_ERROR":         200,
	"UNKNOWN_WORKER":       201,
	"INCOMPATIBLE_PACKAGE": 202,
	"PACKAGE_ERROR":        300,
	"PACKAGE_NOT_FOUND":    301,
	"PACKAGE_BUILD_ERROR":  302,
	"EXECUTION_ERROR":      400,
	"EXECUTION_TIMEOUT":    401,
}

func (x Result_Status) String() string {
	return proto.EnumName(Result_Status_name, int32(x))
}

type Task struct {
	// required
	Worker string `protobuf:"bytes,1,opt,name=worker" json:"worker,omitempty"`
	// required
	Package string `protobuf:"bytes,2,opt,name=package" json:"package,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}

type Status struct {
	Code   int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}

type Result struct {
	Status Result_Status `protobuf:"varint,1,opt,name=status,enum=bunsan.broker.Result_Status" json:"status,omitempty"`
	Reason string        `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	Data   []byte        `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Log    []byte        `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("bunsan.broker.Result_Status", Result_Status_name, Result_Status_value)
}
